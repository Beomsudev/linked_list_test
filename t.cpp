#include <iostream>

using namespace std;

//?????? struct 구현 (data값과 nextNode?? 존재)
struct node {
	int data;
	node* nextNode;
    node* prevNode;
};

//링크??? 리스??? ????????? ??????
class SingleLinkedList {
	private:
		node* head;
		node* tail;
		
	public:
		SingleLinkedList() {
			//head ??? tail??? ??????????? 초기???;
			head = NULL;
			tail = NULL;
		}
		//첫번째의 node 추???
		void insertFirstNode(int n);
		//마???막의 node 추???
		void insertLastNode(int n);

		//node ??????
		void insertNode(node* prevNode, int n);
		//node ??????
		void deleteNode(node* prevNode);

		//첫번?? ?????? ??????????
		node* getHead() {
			return head;
		}
		//SingleLinkedList 출력
		void display(node* head);
};

//첫번째의 node 추???
void SingleLinkedList::insertFirstNode(int n) {
	node* temp = new node;
	//temp??? ???????????? n
	temp->data = n;

	//SingleLinkedList?? 비어????????
	if (head == NULL) {
		//?? node??? temp
		head = temp;
		//마????? node??? temp
		tail = temp;
	}
	//SingleLinkedList??? ??????????? ????????
	else {
		//temp??? nextNode??? head
		temp->nextNode = head;
        temp->prevNode = head;
		//head??? temp
		head = temp;
	}
}

//마???막의 node 추???
void SingleLinkedList::insertLastNode(int n) {
	node* temp = new node;

	//temp??? ???????????? n
	temp->data = n;
	//temp??? nextNode = NULL??
	temp->nextNode = NULL;

	//SingleLinkedList?? 비어????????
	if (head == NULL) {
		//?? node??? temp
		head = temp;
		//마????? node??? temp
		tail = temp;
	}
	//SingleLinkedList??? ??????????? ????????
	else {
		//?????? 마????? node??? nextNode??? temp
		tail->nextNode = temp;
		//마????? node??? temp
		tail = temp;
	}
}

//node ??????
void SingleLinkedList::insertNode(node* prevNode,int n) {
	node* temp = new node;
	//temp??? ???????????? n
	temp->data = n;

	//temp??? nextNode ??????
	//(?????? ??? ??? node??? nextNode?? temp??? nextNode??? ??????)
	temp->nextNode = prevNode->nextNode;

	//temp ??????
	//temp?????? node??? nextNode?? temp?? ??????
	prevNode->nextNode = temp;
}

//node ??????
void SingleLinkedList::deleteNode(node* prevNode) {

	//????????? node?? temp??? ??????
	//(????????? node??? 1????? ??? node??? nextNode) 
	node* temp = prevNode->nextNode;

	//????????? node?? ??????
	//(????????? node??? nextNode?? 1????? ??? node??? nextNode??? ??????)
	prevNode->nextNode = temp->nextNode;

	//temp ??????
	delete temp;
}

//SingleLinkedList 출력
void SingleLinkedList::display(node* head) {
	if (head == NULL) {
		cout << "\n";
	}
	else {
		cout << head->data << " ";
		display(head->nextNode);
	}
	cout << endl;
}



//메인 ??????
int main() {
	SingleLinkedList a;
	//1추???
	a.insertLastNode(1);
	//2추???
	a.insertLastNode(2);
	//3추???
	a.insertLastNode(3);

	//display
	cout << "1,2,3??? SingleLinkedList??? 추???\n";
	a.display(a.getHead());

	//0??? ?????? ?????? 추???
	a.insertFirstNode(0);

	//1??? ???번째??? 추???
	a.insertNode(a.getHead()->nextNode, 21);
	cout << "0??? 첫번째에 추???, 1??? ???번째??? 추???\n";
	a.display(a.getHead());

	//???번째 ?????? ??????
	a.deleteNode(a.getHead()->nextNode);

	//display
	cout << "???번째 ???????? ??????\n"; 
	a.display(a.getHead());
}